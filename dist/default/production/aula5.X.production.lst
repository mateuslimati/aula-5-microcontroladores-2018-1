

Microchip Technology PIC LITE Macro Assembler V1.45 build -152302408 
                                                                                               Mon Mar 05 17:05:14 2018

Microchip Technology Omniscient Code Generator v1.45 (Free mode) build 201711160504
     1                           	processor	16F870
     2                           	opt	pw 120
     3                           	opt	lm
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     6                           	psect	maintext,global,class=CODE,split=1,delta=2
     7                           	psect	text1,local,class=CODE,merge=1,delta=2
     8                           	psect	swtext1,local,class=CONST,delta=2
     9                           	dabs	1,0x7E,2
    10  0000                     
    11                           ; Version 1.45
    12                           ; Generated 16/11/2017 GMT
    13                           ; 
    14                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    15                           ; All rights reserved.
    16                           ; 
    17                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    18                           ; 
    19                           ; Redistribution and use in source and binary forms, with or without modification, are
    20                           ; permitted provided that the following conditions are met:
    21                           ; 
    22                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    23                           ;        conditions and the following disclaimer.
    24                           ; 
    25                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    26                           ;        of conditions and the following disclaimer in the documentation and/or other
    27                           ;        materials provided with the distribution.
    28                           ; 
    29                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    30                           ;        software without specific prior written permission.
    31                           ; 
    32                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    33                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    34                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    35                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    36                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    37                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    38                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    39                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    40                           ; 
    41                           ; 
    42                           ; Code-generator required, PIC16F870 Definitions
    43                           ; 
    44                           ; SFR Addresses
    45  0000                     	;# 
    46  0001                     	;# 
    47  0002                     	;# 
    48  0003                     	;# 
    49  0004                     	;# 
    50  0005                     	;# 
    51  0006                     	;# 
    52  0007                     	;# 
    53  000A                     	;# 
    54  000B                     	;# 
    55  000C                     	;# 
    56  000D                     	;# 
    57  000E                     	;# 
    58  000E                     	;# 
    59  000F                     	;# 
    60  0010                     	;# 
    61  0011                     	;# 
    62  0012                     	;# 
    63  0015                     	;# 
    64  0015                     	;# 
    65  0016                     	;# 
    66  0017                     	;# 
    67  0018                     	;# 
    68  0019                     	;# 
    69  001A                     	;# 
    70  001E                     	;# 
    71  001F                     	;# 
    72  0081                     	;# 
    73  0085                     	;# 
    74  0086                     	;# 
    75  0087                     	;# 
    76  008C                     	;# 
    77  008D                     	;# 
    78  008E                     	;# 
    79  0092                     	;# 
    80  0098                     	;# 
    81  0099                     	;# 
    82  009E                     	;# 
    83  009F                     	;# 
    84  010C                     	;# 
    85  010D                     	;# 
    86  010E                     	;# 
    87  010F                     	;# 
    88  018C                     	;# 
    89  018D                     	;# 
    90  0000                     	;# 
    91  0001                     	;# 
    92  0002                     	;# 
    93  0003                     	;# 
    94  0004                     	;# 
    95  0005                     	;# 
    96  0006                     	;# 
    97  0007                     	;# 
    98  000A                     	;# 
    99  000B                     	;# 
   100  000C                     	;# 
   101  000D                     	;# 
   102  000E                     	;# 
   103  000E                     	;# 
   104  000F                     	;# 
   105  0010                     	;# 
   106  0011                     	;# 
   107  0012                     	;# 
   108  0015                     	;# 
   109  0015                     	;# 
   110  0016                     	;# 
   111  0017                     	;# 
   112  0018                     	;# 
   113  0019                     	;# 
   114  001A                     	;# 
   115  001E                     	;# 
   116  001F                     	;# 
   117  0081                     	;# 
   118  0085                     	;# 
   119  0086                     	;# 
   120  0087                     	;# 
   121  008C                     	;# 
   122  008D                     	;# 
   123  008E                     	;# 
   124  0092                     	;# 
   125  0098                     	;# 
   126  0099                     	;# 
   127  009E                     	;# 
   128  009F                     	;# 
   129  010C                     	;# 
   130  010D                     	;# 
   131  010E                     	;# 
   132  010F                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0006                     _PORTB	set	6
   136  0007                     _PORTCbits	set	7
   137  0086                     _TRISB	set	134
   138  0087                     _TRISC	set	135
   139                           
   140                           ; #config settings
   141  0000                     
   142                           	psect	cinit
   143  07FE                     start_initialization:	
   144  07FE                     __initialization:	
   145  07FE                     end_of_initialization:	
   146                           ;End of C runtime variable initialization code
   147                           
   148  07FE                     __end_of__initialization:	
   149  07FE  0183               	clrf	3
   150  07FF  2FA8               	ljmp	_main	;jump to C main() function
   151                           
   152                           	psect	cstackCOMMON
   153  0070                     __pcstackCOMMON:	
   154  0070                     ?_print_7_seg:	
   155  0070                     ?_main:	
   156                           ; 1 bytes @ 0x0
   157                           
   158  0070                     print_7_seg@i:	
   159                           ; 1 bytes @ 0x0
   160                           
   161                           
   162                           ; 2 bytes @ 0x0
   163  0070                     	ds	2
   164  0072                     ??_print_7_seg:	
   165  0072                     ??_main:	
   166                           ; 1 bytes @ 0x2
   167                           
   168                           
   169                           ; 1 bytes @ 0x2
   170  0072                     	ds	3
   171  0075                     main@i:	
   172                           
   173                           ; 2 bytes @ 0x5
   174  0075                     	ds	2
   175                           
   176                           	psect	maintext
   177  07A8                     __pmaintext:	
   178 ;;
   179 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   180 ;;
   181 ;; *************** function _main *****************
   182 ;; Defined at:
   183 ;;		line 11 in file "main.c"
   184 ;; Parameters:    Size  Location     Type
   185 ;;		None
   186 ;; Auto vars:     Size  Location     Type
   187 ;;  i               2    5[COMMON] int 
   188 ;; Return value:  Size  Location     Type
   189 ;;                  1    wreg      void 
   190 ;; Registers used:
   191 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   192 ;; Tracked objects:
   193 ;;		On entry : B00/0
   194 ;;		On exit  : 0/0
   195 ;;		Unchanged: 0/0
   196 ;; Data sizes:     COMMON   BANK0   BANK1
   197 ;;      Params:         0       0       0
   198 ;;      Locals:         2       0       0
   199 ;;      Temps:          3       0       0
   200 ;;      Totals:         5       0       0
   201 ;;Total ram usage:        5 bytes
   202 ;; Hardware stack levels required when called:    1
   203 ;; This function calls:
   204 ;;		_print_7_seg
   205 ;; This function is called by:
   206 ;;		Startup code after reset
   207 ;; This function uses a non-reentrant model
   208 ;;
   209                           
   210                           
   211                           ;psect for function _main
   212  07A8                     _main:	
   213                           
   214                           ;main.c: 13: TRISC = 0xC0;
   215                           
   216                           ;incstack = 0
   217                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   218  07A8  30C0               	movlw	192
   219  07A9  1683               	bsf	3,5	;RP0=1, select bank1
   220  07AA  1303               	bcf	3,6	;RP1=0, select bank1
   221  07AB  0087               	movwf	7	;volatile
   222                           
   223                           ;main.c: 14: int i = 0;
   224  07AC  01F5               	clrf	main@i
   225  07AD  01F6               	clrf	main@i+1
   226                           
   227                           ;main.c: 15: print_7_seg(0);
   228  07AE  3000               	movlw	0
   229  07AF  00F0               	movwf	print_7_seg@i
   230  07B0  00F1               	movwf	print_7_seg@i+1
   231  07B1  276E               	fcall	_print_7_seg
   232  07B2                     l652:	
   233                           ;main.c: 16: while(1){
   234                           
   235                           
   236                           ;main.c: 17: if(PORTCbits.RC7 == 1){
   237  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   238  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   239  07B4  1F87               	btfss	7,7	;volatile
   240  07B5  2FD9               	goto	l666
   241                           
   242                           ;main.c: 18: if(i != 9)
   243  07B6  3009               	movlw	9
   244  07B7  0675               	xorwf	main@i,w
   245  07B8  0476               	iorwf	main@i+1,w
   246  07B9  1903               	btfsc	3,2
   247  07BA  2FC1               	goto	l658
   248                           
   249                           ;main.c: 19: i++;
   250  07BB  3001               	movlw	1
   251  07BC  07F5               	addwf	main@i,f
   252  07BD  1803               	skipnc
   253  07BE  0AF6               	incf	main@i+1,f
   254  07BF  3000               	movlw	0
   255  07C0  07F6               	addwf	main@i+1,f
   256  07C1                     l658:	
   257                           
   258                           ;main.c: 20: print_7_seg(i);
   259  07C1  0876               	movf	main@i+1,w
   260  07C2  00F1               	movwf	print_7_seg@i+1
   261  07C3  0875               	movf	main@i,w
   262  07C4  00F0               	movwf	print_7_seg@i
   263  07C5  276E               	fcall	_print_7_seg
   264                           
   265                           ;main.c: 21: PORTCbits.RC0 = 1;
   266  07C6  1283               	bcf	3,5	;RP0=0, select bank0
   267  07C7  1303               	bcf	3,6	;RP1=0, select bank0
   268  07C8  1407               	bsf	7,0	;volatile
   269                           
   270                           ;main.c: 22: _delay((unsigned long)((500)*(16000000/4000.0)));
   271  07C9  300B               	movlw	11
   272  07CA  00F4               	movwf	??_main+2
   273  07CB  3026               	movlw	38
   274  07CC  00F3               	movwf	??_main+1
   275  07CD  305D               	movlw	93
   276  07CE  00F2               	movwf	??_main
   277  07CF                     u97:	
   278  07CF  0BF2               	decfsz	??_main,f
   279  07D0  2FCF               	goto	u97
   280  07D1  0BF3               	decfsz	??_main+1,f
   281  07D2  2FCF               	goto	u97
   282  07D3  0BF4               	decfsz	??_main+2,f
   283  07D4  2FCF               	goto	u97
   284  07D5  2FD6               	nop2
   285                           
   286                           ;main.c: 23: PORTCbits.RC0 = 0;
   287  07D6  1283               	bcf	3,5	;RP0=0, select bank0
   288  07D7  1303               	bcf	3,6	;RP1=0, select bank0
   289  07D8  1007               	bcf	7,0	;volatile
   290  07D9                     l666:	
   291                           
   292                           ;main.c: 24: }
   293                           ;main.c: 25: if(PORTCbits.RC6 == 1){
   294  07D9  1F07               	btfss	7,6	;volatile
   295  07DA  2FB2               	goto	l652
   296                           
   297                           ;main.c: 26: if(i != 0)
   298  07DB  0875               	movf	main@i,w
   299  07DC  0476               	iorwf	main@i+1,w
   300  07DD  1903               	btfsc	3,2
   301  07DE  2FE5               	goto	l672
   302                           
   303                           ;main.c: 27: i--;
   304  07DF  30FF               	movlw	255
   305  07E0  07F5               	addwf	main@i,f
   306  07E1  1803               	skipnc
   307  07E2  0AF6               	incf	main@i+1,f
   308  07E3  30FF               	movlw	255
   309  07E4  07F6               	addwf	main@i+1,f
   310  07E5                     l672:	
   311                           
   312                           ;main.c: 28: print_7_seg(i);
   313  07E5  0876               	movf	main@i+1,w
   314  07E6  00F1               	movwf	print_7_seg@i+1
   315  07E7  0875               	movf	main@i,w
   316  07E8  00F0               	movwf	print_7_seg@i
   317  07E9  276E               	fcall	_print_7_seg
   318                           
   319                           ;main.c: 29: PORTCbits.RC1 = 1;
   320  07EA  1283               	bcf	3,5	;RP0=0, select bank0
   321  07EB  1303               	bcf	3,6	;RP1=0, select bank0
   322  07EC  1487               	bsf	7,1	;volatile
   323                           
   324                           ;main.c: 30: _delay((unsigned long)((500)*(16000000/4000.0)));
   325  07ED  300B               	movlw	11
   326  07EE  00F4               	movwf	??_main+2
   327  07EF  3026               	movlw	38
   328  07F0  00F3               	movwf	??_main+1
   329  07F1  305D               	movlw	93
   330  07F2  00F2               	movwf	??_main
   331  07F3                     u107:	
   332  07F3  0BF2               	decfsz	??_main,f
   333  07F4  2FF3               	goto	u107
   334  07F5  0BF3               	decfsz	??_main+1,f
   335  07F6  2FF3               	goto	u107
   336  07F7  0BF4               	decfsz	??_main+2,f
   337  07F8  2FF3               	goto	u107
   338  07F9  2FFA               	nop2
   339                           
   340                           ;main.c: 31: PORTCbits.RC1 = 0;
   341  07FA  1283               	bcf	3,5	;RP0=0, select bank0
   342  07FB  1303               	bcf	3,6	;RP1=0, select bank0
   343  07FC  1087               	bcf	7,1	;volatile
   344  07FD  2FB2               	goto	l652
   345  07FE                     __end_of_main:	
   346                           
   347                           	psect	text1
   348  076E                     __ptext1:	
   349 ;; *************** function _print_7_seg *****************
   350 ;; Defined at:
   351 ;;		line 9 in file "display7segmentos.c"
   352 ;; Parameters:    Size  Location     Type
   353 ;;  i               2    0[COMMON] int 
   354 ;; Auto vars:     Size  Location     Type
   355 ;;		None
   356 ;; Return value:  Size  Location     Type
   357 ;;                  1    wreg      void 
   358 ;; Registers used:
   359 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   360 ;; Tracked objects:
   361 ;;		On entry : 0/0
   362 ;;		On exit  : 0/0
   363 ;;		Unchanged: 0/0
   364 ;; Data sizes:     COMMON   BANK0   BANK1
   365 ;;      Params:         2       0       0
   366 ;;      Locals:         0       0       0
   367 ;;      Temps:          0       0       0
   368 ;;      Totals:         2       0       0
   369 ;;Total ram usage:        2 bytes
   370 ;; Hardware stack levels used:    1
   371 ;; This function calls:
   372 ;;		Nothing
   373 ;; This function is called by:
   374 ;;		_main
   375 ;; This function uses a non-reentrant model
   376 ;;
   377                           
   378                           
   379                           ;psect for function _print_7_seg
   380  076E                     _print_7_seg:	
   381                           
   382                           ;display7segmentos.c: 11: TRISB = 0x00;
   383                           
   384                           ;incstack = 0
   385                           ; Regs used in _print_7_seg: [wreg-fsr0h+status,2+status,0]
   386  076E  1683               	bsf	3,5	;RP0=1, select bank1
   387  076F  1303               	bcf	3,6	;RP1=0, select bank1
   388  0770  0186               	clrf	6	;volatile
   389                           
   390                           ;display7segmentos.c: 12: PORTB = 0xFF;
   391  0771  30FF               	movlw	255
   392  0772  1283               	bcf	3,5	;RP0=0, select bank0
   393  0773  1303               	bcf	3,6	;RP1=0, select bank0
   394  0774  0086               	movwf	6	;volatile
   395                           
   396                           ;display7segmentos.c: 14: switch(i){
   397  0775  2F97               	goto	l636
   398  0776                     l614:	
   399                           ;display7segmentos.c: 15: case 0:
   400                           
   401                           
   402                           ;display7segmentos.c: 16: PORTB = 0b11000000;
   403  0776  30C0               	movlw	192
   404  0777  0086               	movwf	6	;volatile
   405                           
   406                           ;display7segmentos.c: 17: break;
   407  0778  0008               	return
   408  0779                     l616:	
   409                           ;display7segmentos.c: 18: case 1:
   410                           
   411                           
   412                           ;display7segmentos.c: 19: PORTB = 0b11111001;
   413  0779  30F9               	movlw	249
   414  077A  0086               	movwf	6	;volatile
   415                           
   416                           ;display7segmentos.c: 20: break;
   417  077B  0008               	return
   418  077C                     l618:	
   419                           ;display7segmentos.c: 21: case 2:
   420                           
   421                           
   422                           ;display7segmentos.c: 22: PORTB = 0b10100100;
   423  077C  30A4               	movlw	164
   424  077D  0086               	movwf	6	;volatile
   425                           
   426                           ;display7segmentos.c: 23: break;
   427  077E  0008               	return
   428  077F                     l620:	
   429                           ;display7segmentos.c: 24: case 3:
   430                           
   431                           
   432                           ;display7segmentos.c: 25: PORTB = 0b10110000;
   433  077F  30B0               	movlw	176
   434  0780  0086               	movwf	6	;volatile
   435                           
   436                           ;display7segmentos.c: 26: break;
   437  0781  0008               	return
   438  0782                     l622:	
   439                           ;display7segmentos.c: 27: case 4:
   440                           
   441                           
   442                           ;display7segmentos.c: 28: PORTB = 0b10011001;
   443  0782  3099               	movlw	153
   444  0783  0086               	movwf	6	;volatile
   445                           
   446                           ;display7segmentos.c: 29: break;
   447  0784  0008               	return
   448  0785                     l624:	
   449                           ;display7segmentos.c: 30: case 5:
   450                           
   451                           
   452                           ;display7segmentos.c: 31: PORTB = 0b10010010;
   453  0785  3092               	movlw	146
   454  0786  0086               	movwf	6	;volatile
   455                           
   456                           ;display7segmentos.c: 32: break;
   457  0787  0008               	return
   458  0788                     l626:	
   459                           ;display7segmentos.c: 33: case 6:
   460                           
   461                           
   462                           ;display7segmentos.c: 34: PORTB = 0b10000010;
   463  0788  3082               	movlw	130
   464  0789  0086               	movwf	6	;volatile
   465                           
   466                           ;display7segmentos.c: 35: break;
   467  078A  0008               	return
   468  078B                     l628:	
   469                           ;display7segmentos.c: 36: case 7:
   470                           
   471                           
   472                           ;display7segmentos.c: 37: PORTB = 0b11111000;
   473  078B  30F8               	movlw	248
   474  078C  0086               	movwf	6	;volatile
   475                           
   476                           ;display7segmentos.c: 38: break;
   477  078D  0008               	return
   478  078E                     l630:	
   479                           ;display7segmentos.c: 39: case 8:
   480                           
   481                           
   482                           ;display7segmentos.c: 40: PORTB = 0b10000000;
   483  078E  3080               	movlw	128
   484  078F  0086               	movwf	6	;volatile
   485                           
   486                           ;display7segmentos.c: 41: break;
   487  0790  0008               	return
   488  0791                     l632:	
   489                           ;display7segmentos.c: 42: case 9:
   490                           
   491                           
   492                           ;display7segmentos.c: 43: PORTB = 0b10010000;
   493  0791  3090               	movlw	144
   494  0792  0086               	movwf	6	;volatile
   495                           
   496                           ;display7segmentos.c: 44: break;
   497  0793  0008               	return
   498  0794                     l634:	
   499                           ;display7segmentos.c: 45: default:
   500                           
   501                           
   502                           ;display7segmentos.c: 46: PORTB = 0b11111111;
   503  0794  30FF               	movlw	255
   504  0795  0086               	movwf	6	;volatile
   505                           
   506                           ;display7segmentos.c: 47: }
   507  0796  0008               	return
   508  0797                     l636:	
   509                           
   510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
   511                           ; Switch size 1, requested type "space"
   512                           ; Number of cases is 1, Range of values is 0 to 0
   513                           ; switch strategies available:
   514                           ; Name         Instructions Cycles
   515                           ; simple_byte            4     3 (average)
   516                           ; direct_byte            7     6 (fixed)
   517                           ; jumptable            260     6 (fixed)
   518                           ;	Chosen strategy is simple_byte
   519  0797  0871               	movf	print_7_seg@i+1,w
   520  0798  3A00               	xorlw	0	; case 0
   521  0799  1903               	skipnz
   522  079A  2F9C               	goto	l720
   523  079B  2F94               	goto	l634
   524  079C                     l720:	
   525                           
   526                           ; Switch size 1, requested type "space"
   527                           ; Number of cases is 10, Range of values is 0 to 9
   528                           ; switch strategies available:
   529                           ; Name         Instructions Cycles
   530                           ; direct_byte           16     6 (fixed)
   531                           ; simple_byte           31    16 (average)
   532                           ; jumptable            260     6 (fixed)
   533                           ;	Chosen strategy is direct_byte
   534  079C  0870               	movf	print_7_seg@i,w
   535  079D  0084               	movwf	4
   536  079E  300A               	movlw	10
   537  079F  0204               	subwf	4,w
   538  07A0  1803               	skipnc
   539  07A1  2F94               	goto	l634
   540  07A2  3000               	movlw	high S722
   541  07A3  008A               	movwf	10
   542  07A4  3001               	movlw	low S722
   543  07A5  0704               	addwf	4,w
   544  07A6  0082               	movwf	2
   545  07A7  0008               	return
   546  07A8                     __end_of_print_7_seg:	
   547  007E                     btemp	set	126	;btemp
   548  007E                     wtemp0	set	126
   549                           
   550                           	psect	swtext1
   551  0001                     __pswtext1:	
   552  0001                     S722:	
   553  0001  2F76               	ljmp	l614
   554  0002  2F79               	ljmp	l616
   555  0003  2F7C               	ljmp	l618
   556  0004  2F7F               	ljmp	l620
   557  0005  2F82               	ljmp	l622
   558  0006  2F85               	ljmp	l624
   559  0007  2F88               	ljmp	l626
   560  0008  2F8B               	ljmp	l628
   561  0009  2F8E               	ljmp	l630
   562  000A  2F91               	ljmp	l632


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7       7
    BANK0            80      0       0
    BANK1            32      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_print_7_seg

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0     272
                                              2 COMMON     5     5      0
                        _print_7_seg
 ---------------------------------------------------------------------------------
 (1) _print_7_seg                                          2     0      2     181
                                              0 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _print_7_seg

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA              40      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       7       1       50.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            20      0       0       6        0.0%
BANK1               20      0       0       7        0.0%
DATA                 0      0       0       8        0.0%


Microchip Technology PIC Macro Assembler V1.45 build -152302408 
Symbol Table                                                                                   Mon Mar 05 17:05:14 2018

                      pc 0002             print_7_seg@i 0070              __CFG_CP$OFF 0000  
                     u97 07CF                       fsr 0004                      S722 0001  
                    l620 077F                      l630 078E                      l622 0782  
                    l614 0776                      l720 079C                      l632 0791  
                    l624 0785                      l616 0779                      l634 0794  
                    l626 0788                      l618 077C                      l628 078B  
                    l636 0797                      l652 07B2                      l672 07E5  
                    l658 07C1                      l666 07D9                      u107 07F3  
           __CFG_CPD$OFF 0000             __CFG_FOSC$HS 0000             __CFG_LVP$OFF 0000  
           __CFG_WRT$OFF 0000                     _main 07A8                     btemp 007E  
          __CFG_BOREN$ON 0000                     start 0000                    ?_main 0070  
          __CFG_WDTE$OFF 0000                    _PORTB 0006                    _TRISB 0086  
                  _TRISC 0087                    main@i 0075                    pclath 000A  
                  status 0003                    wtemp0 007E          __initialization 07FE  
           __end_of_main 07FE                   ??_main 0072           __CFG_PWRTE$OFF 0000  
           ?_print_7_seg 0070  __end_of__initialization 07FE           __pcstackCOMMON 0070  
             __pmaintext 07A8                  __ptext1 076E     end_of_initialization 07FE  
   __size_of_print_7_seg 003A                _PORTCbits 0007      start_initialization 07FE  
              ___latbits 0000                __pswtext1 0001            ??_print_7_seg 0072  
    __end_of_print_7_seg 07A8            __size_of_main 0056              _print_7_seg 076E  
